// This file is generated by generate-std.joke script. Do not edit manually!

package bolt

import (
	"fmt"
	. "github.com/candid82/joker/core"
	"os"
)

func InternsOrThunks() {
	if VerbosityLevel > 0 {
		fmt.Fprintln(os.Stderr, "Lazily running slow version of bolt.InternsOrThunks().")
	}
	boltNamespace.ResetMeta(MakeMeta(nil, `Provide API for Bolt embeded database https://github.com/etcd-io/bbolt.`, "1.0"))

	boltNamespace.InternVar("close", close_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("db"))),
			`Releases all database resources.
  It will block waiting for any open transactions to finish
  before closing the database and returning.`, "1.0"))

	boltNamespace.InternVar("create-bucket", create_bucket_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("db"), MakeSymbol("name"))),
			`Creates a new bucket. Throws an error if the bucket already exists,
  if the bucket name is blank, or if the bucket name is too long.`, "1.0"))

	boltNamespace.InternVar("get", get_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("db"), MakeSymbol("bucket"), MakeSymbol("key"))),
			`Retrieves the value for a key in the bucket.
  Returns nil if the key does not exist.`, "1.0"))

	boltNamespace.InternVar("open", open_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("filename"), MakeSymbol("mode")), NewVectorFrom(MakeSymbol("filename"), MakeSymbol("mode"), MakeSymbol("options"))),
			`Creates and opens a database at the given path.
  If the file does not exist then it will be created automatically.`, "1.0").Plus(MakeKeyword("tag"), String{S: "BoltDB"}))

	boltNamespace.InternVar("put", put_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("db"), MakeSymbol("bucket"), MakeSymbol("key"), MakeSymbol("value"))),
			`Sets the value for a key in the bucket.
  If the key exist then its previous value will be overwritten.
  Throws an error if the key is blank, if the key is too large, or if the value is too large.`, "1.0"))

}
