// This file is generated by generate-std.joke script. Do not edit manually!

package time

import (
  "time"
  . "github.com/candid82/joker/core"
)

var timeNamespace = GLOBAL_ENV.EnsureNamespace(MakeSymbol("joker.time"))

var now_ Proc = func(args []Object) Object {
  c := len(args)
  switch  {
  case c == 0:
    
    
    res := time.Now()
    return MakeTime(res)

  default:
    PanicArity(c)
  }
  return NIL
}

var sleep_ Proc = func(args []Object) Object {
  c := len(args)
  switch  {
  case c == 1:
    
    d := ExtractInt(args, 0)
    res := sleep(d)
    return res

  default:
    PanicArity(c)
  }
  return NIL
}


func init() {

timeNamespace.ResetMeta(MakeMeta(nil, "Provides functionality for measuring and displaying time.", "1.0"))

timeNamespace.InternVar("now", now_,
  MakeMeta(
    NewListFrom(NewVectorFrom()),
    `Now returns the current local time.`, "1.0"))

timeNamespace.InternVar("sleep", sleep_,
  MakeMeta(
    NewListFrom(NewVectorFrom(MakeSymbol("d"))),
    `Pauses the execution thread for at least the duration d (expressed in nanoseconds).
  A negative or zero duration causes sleep to return immediately.`, "1.0"))

}
