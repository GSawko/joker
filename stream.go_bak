package main

import (
	"bufio"
)

type RuneReader interface {
	ReadChar() (rune, Error)
	UnreadChar(r rune)
	PeekChar() rune
}

type ScannerStream struct {
	scanner       bufio.Scanner
	nextString    string
	currentString string
	i             int
}

func NewScannerStream(scanner bufio.Scanner) ScannerStream {
	return ScannerStream{
		scanner: scanner,
	}
}

func consumeLine(stream ScannerStream) (bool, Error) {
	if stream.nextString != nil {
		stream.currentString = stream.nextString
		stream.nextString = nil
		return true, nil
	}
	if !stream.scanner.Scan() {
		return false, stream.scanner.Err()
	}
	stream.currentString = stream.scanner.Text()
	return true, nil
}

func (stream ScannerStream) ReadChar() (rune, Error) {
	if stream.i >= len(stream.currentString) {
		if ok, err := consumeLine(stream); !ok {
			return nil, err
		}
		stream.i = 0
	}
	stream.i++
	return stream.currentString[stream.i-1], nil
}
